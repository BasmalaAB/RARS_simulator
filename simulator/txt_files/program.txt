#int strlen (char[] str) { 
#int len=0, i=0; 
#while(str[i]!= '\0'){ 
#i++; 
#len++; } 
#return len; } 
.data
output: .asciz "Enter your word: "
buffer: .space 256

.text
.global main
main: la a0, output
      li a7, 4
      ecall
      
      
      la a0, buffer
      li a1, 256
      li a7, 8
      ecall
      
      #la a0, buffer
      #li a7, 1
      #ecall 
      
      add s0, a0, x0
      jal strlen1
      
      
      li a7, 1
      ecall
      
      li a7, 10
      ecall


#the function string length, assumptions: str[] (base address) -> a0,  
#len -> s0, i -> s1 
# '\0' = 0 (the null ascii value)
#using pointers method, we will just use the register storing the base address as a pointer to the array in memory
strlen:	li s0, 0		#len = 0
loop:	lbu t1, 0(a0)	#t1 = str[i] load a byte from that address
	beq t1, zero, exit	#make sure str[i] != '\0'
	addi s0, s0, 1	#len++
	addi a0, a0, 1	#i++
	j loop
exit:
	addi a0, s0, -1		#store len in the argument register (return len)
	jr ra
	
	
strlen1:	li s0, 0			#len = 0
loop1:	lbu t1, 0(a0)		#t1 = str[i] load a byte from that address
	beqz t1, exit1		#make sure str[i] != '\0'
	addi s0, s0, 1		#len++
	addi a0, a0, 1		#i++
	j loop1
exit1:	addi a0, s0, -1		#store len in the argument register (return len)
	jr ra

